openapi: 3.0.0
info:
  title: Nutrify API
  version: 1.0.0
  description: API para gerenciamento de alimentação, dieta e controle de calorias
servers:
  - url: http://localhost:3000
paths:
  /users/register:
    post:
      summary: Registro de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Usuário registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
  /users/login:
    post:
      summary: Login de usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
  /users/profile:
    get:
      summary: Perfil do usuário
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /foods:
    post:
      summary: Cadastrar alimento
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodCreate'
      responses:
        '201':
          description: Alimento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Food'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      summary: Listar alimentos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de alimentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Food'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /foods/{id}:
    put:
      summary: Atualizar alimento
      security:
        - bearerAuth: []
        - bearerAuth: []
      # Apenas admins podem atualizar/remover alimentos
      x-roles: [admin]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
      responses:
        '200':
          description: Alimento atualizado
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Remover alimento
      security:
        - bearerAuth: []
      x-roles: [admin]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Alimento removido
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /meals:
    post:
      summary: Registrar refeição
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealCreate'
      responses:
        '201':
          description: Refeição registrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meal'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    get:
      summary: Listar refeições do usuário
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de refeições
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /meals/{id}:
    put:
      summary: Atualizar refeição
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MealUpdate'
      responses:
        '200':
          description: Refeição atualizada
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Remover refeição
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Refeição removida
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        stack:
          type: string
          nullable: true
    UserCreate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
        calorieGoal:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: "user-1"
        name: "João da Silva"
        email: "joao@example.com"
        role: "user"
        calorieGoal: 2000
        createdAt: "2025-08-19T12:00:00.000Z"
        updatedAt: "2025-08-19T12:00:00.000Z"
    Food:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        calories:
          type: number
        protein:
          type: number
        carbs:
          type: number
        fat:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: "food-1"
        name: "Banana"
        category: "Fruta"
        calories: 89
        protein: 1.1
        carbs: 23
        fat: 0.3
        createdAt: "2025-08-19T12:00:00.000Z"
        updatedAt: "2025-08-19T12:00:00.000Z"
    Meal:
      type: object
      properties:
        date:
          type: string
          format: date-time
        foods:
          type: array
          items:
            type: string
        totalCalories:
          type: number
        totalProtein:
          type: number
        totalCarbs:
          type: number
        totalFat:
          type: number
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        id: "meal-1"
        date: "2025-08-19T18:30:00.000Z"
        foods: ["food-1"]
        totalCalories: 89
        totalProtein: 1.1
        totalCarbs: 23
        totalFat: 0.3
        createdAt: "2025-08-19T18:30:00.000Z"
        updatedAt: "2025-08-19T18:30:00.000Z"
    MealCreate:
      type: object
      description: Payload para criação de refeição. Somente lista de IDs de alimentos é aceita; date e timestamps são gerados pelo servidor.
      properties:
        foods:
          type: array
          items:
            type: string
      required: [foods]
      example:
        foods: ["food-1", "food-2"]
    MealUpdate:
      type: object
      description: Payload para atualização de refeição. Apenas o campo foods (array de ids) pode ser alterado; totals e updatedAt são recalculados pelo servidor.
      properties:
        foods:
          type: array
          items:
            type: string
      example:
        foods: ["food-1"]
    FoodCreate:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        calories:
          type: number
        protein:
          type: number
        carbs:
          type: number
        fat:
          type: number
      example:
        name: "Banana"
        category: "Fruta"
        calories: 89
        protein: 1.1
        carbs: 23
        fat: 0.3
  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Não autenticado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Acesso negado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Recurso não encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
